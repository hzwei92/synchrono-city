{"version":3,"sources":["synchrono/client/core.cljs"],"mappings":";;AAKA,uCAAA,2CAAA,uEAAA,uDAAA,uDAAA,KAAA,0DAAA,MAAA,4DAAA,xYAAKA;AAML,yCAAA,wCAAA,wDAAA,mFAAA,6DAAA,oFAAA,mGAAA,oGAAA,uFAAA,sFAAA,gFAAA,iCAAA,MAAA,MAAA,OAAA,MAAA,MAAA,KAAA,KAAA,33BAAKC;AAWL,wCAAA,2CAAA,kEAAA,GAAA,uFAAA,GAAA,kEAAA,GAAA,0DAAA,jXAAKC;AAML,4CAAA,2CAAA,qEAAA,5JAAKC;AAGL,4CAAA,2CAAA,sDAAA,7IAAKC;AAGL,mCAAA,2CAAA,wFAAA,8FAAA,2FAAA,wGAAA,vcAAKC,iIACGL,4FACEC,4FACDC,oGACIC,uGACAC;AAEb,yDAAA,zDAACE,+HAEA,WAAKC,EAAEA;AAAP,AACEF;;AAEH,iCAAA,jCAAMG;AAAN,AAAA,0FAAA,mDAAA;;AAGA,mCAAA,nCAAMC;AAAN,AACE,AAACC;;AACD,IAAMC,YAAU,wBAAA,xBAAiBC;IAC3BC,OAAK,AAACC,gDAAeH;AAD3B,AAEE,OAASE,YAAK,sDAAA,tDAACE,yIAAcP;;AAEjC,6BAAA,7BAAMQ;AAAN,AACE,4BAAA,mFAAA,/GAACC;;AACD,OAACR","names":["synchrono.client.core/default-app-db","synchrono.client.core/default-rules-db","synchrono.client.core/default-user-db","synchrono.client.core/default-producer-db","synchrono.client.core/default-consumer-db","synchrono.client.core/default-db","re_frame.core.reg_event_db","_","synchrono.client.core/app-view","synchrono.client.core/mount-root","re-frame.core/clear-subscription-cache!","container","js/document","root","js/module$node_modules$react_dom$client.createRoot","reagent.core.as_element","synchrono.client.core/init","re-frame.core/dispatch-sync"],"sourcesContent":["(ns synchrono.client.core\n  (:require [\"react-dom/client\" :as rdc]\n            [re-frame.core :as re-frame]\n            [reagent.core :as r]))\n\n(def default-app-db\n  {:current-route :about\n   :error nil\n   :posting false\n   :getting false})\n\n(def default-rules-db\n  {:relays []\n   :lightning_public_key nil ;; TODO: add this\n   :initial_balance_sat 7000 ;; 50 weeks\n   :minimum_balance_sat 140 ;; 7 days\n   :daily_usage_price_sat 20 ;; 20 sat per day\n   :timezone \"UTC\"\n   :captcha_required false\n   :email_verification_required false\n   :mobile_verification_required false})\n\n(def default-user-db\n  {:public-key \"\"\n   :encrypted-private-key \"\"\n   :private-key \"\"\n   :balance 0})\n\n(def default-producer-db\n  {:post-content \"\"})\n\n(def default-consumer-db\n  {:days []})\n\n(def default-db\n  {:app default-app-db\n   :rules default-rules-db\n   :user default-user-db\n   :producer default-producer-db\n   :consumer default-consumer-db})\n\n(re-frame/reg-event-db\n :initialize-db\n (fn [_ _]\n   default-db))\n\n(defn app-view []\n  [:div \"Hello, World!\"])\n\n(defn mount-root []\n  (re-frame/clear-subscription-cache!)\n  (let [container (.getElementById js/document \"app\")\n        root (rdc/createRoot container)]\n    (.render root (r/as-element [app-view]))))\n\n(defn init []\n  (re-frame/dispatch-sync [:initialize-db])\n  (mount-root))"]}